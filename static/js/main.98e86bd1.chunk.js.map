{"version":3,"sources":["components/images/office.jpg","utils/API.js","components/Container/index.js","components/SearchForm/index.js","components/SearchResults/index.js","components/EmployeeTable/index.js","components/Row/index.js","components/Hero/index.js","pages/Search.js","components/Header/index.js","components/Footer/index.js","components/Wrapper/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","axios","get","Container","props","className","style","children","SearchForm","htmlFor","value","search","onChange","handleInputChange","name","list","type","placeholder","id","SearchResults","scope","results","map","employee","index","key","email","src","picture","thumbnail","alt","first","last","gender","dob","age","cell","Maintable","employees","Row","Hero","backgroundImage","Search","state","searchedEmp","error","event","searchkey","target","console","log","uppercaseKey","charAt","toUpperCase","slice","setState","filteredChoice","filter","chosen","indexOf","API","then","res","data","catch","err","table","alterstate","searched","this","undefined","length","minHeight","Component","Header","Footer","href","Wrapper","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.98e86bd1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/office.1bf0a6a3.jpg\";","import axios from \"axios\";\n\n// Export an object containing methods we'll use for accessing the Dog.Ceo API\n\nexport default {\n  getRandomEmployees: function() {\n    return axios.get(\"https://randomuser.me/api/?results=50&nat=us&exc=login,id,phone\");\n  },\n};","import React from \"react\";\n\nfunction Container(props) {\n  return <div className=\"container\" style={props.style}>{props.children}</div>;\n}\n\nexport default Container;\n","import React from \"react\";\nimport \"./style.css\";\n\n// Using the datalist element we can create autofill suggestions based on the props.breeds array\nfunction SearchForm(props) {\n  return (\n    <form className=\"search offset-lg-6\">\n      <div className=\"form-group\">\n        <label htmlFor=\"employee\"></label>\n        <input\n          value={props.search}\n          onChange={props.handleInputChange}\n          name=\"employee\"\n          list=\"employees\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Enter employee name\"\n          id=\"employee\"\n        />\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction SearchResults(props) {\n  return (\n    <table className=\"table table-striped\">\n        <thead className=\"thead-dark\">\n            <tr>\n                <th scope=\"col\">#</th>\n                <th scope=\"col\">Image</th>\n                <th scope=\"col\">First Name</th>\n                <th scope=\"col\">Last Name</th>\n                <th scope=\"col\">Gender</th>\n                <th scope=\"col\">Age</th>\n                <th scope=\"col\">Cell</th>\n                <th scope=\"col\">Email</th>\n            </tr>\n        </thead>\n        <tbody>\n            {props.results.map( (employee, index) => (\n                <tr key={employee.email}>\n                  <th scope=\"row\">{index+1}</th>\n                  <td><img src={employee.picture.thumbnail} alt=\"img of employee\"></img></td>\n                  <td>{employee.name.first}</td>\n                  <td>{employee.name.last}</td>\n                  <td>{employee.gender}</td>\n                  <td>{employee.dob.age}</td>\n                  <td>{employee.cell} </td>\n                  <td>{employee.email}</td>\n                </tr>\n                ))} \n        </tbody>\n    </table>\n  );\n}\n\nexport default SearchResults;\n","import React from \"react\";\n\n\nfunction Maintable(props){\n    return(\n        <table className=\"table table-striped\">\n            <thead className=\"thead-dark\">\n                <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Image</th>\n                    <th scope=\"col\">First Name</th>\n                    <th scope=\"col\">Last Name</th>\n                    <th scope=\"col\">Gender</th>\n                    <th scope=\"col\">Age</th>\n                    <th scope=\"col\">Cell</th>\n                    <th scope=\"col\">Email</th>\n                </tr>\n            </thead>\n            <tbody>\n                {props.employees.map( (employee, index) => (\n                    <tr key={employee.email}>\n                        <th scope=\"row\">{index+1}</th>\n                        <td><img src={employee.picture.thumbnail} alt=\"img of employee\"></img></td>\n                        <td>{employee.name.first}</td>\n                        <td>{employee.name.last}</td>\n                        <td>{employee.gender}</td>\n                        <td>{employee.dob.age}</td>\n                        <td>{employee.cell} </td>\n                        <td>{employee.email}</td>\n                    </tr>\n                    ))} \n            </tbody>\n        </table>\n    )\n} \n\nexport default Maintable;","import React from \"react\";\n\nfunction Row(props) {\n  return <div className=\"row\">{props.children}</div>;\n}\n\nexport default Row;\n","import React from \"react\";\nimport \"./style.css\";\nimport backgroundImage from \"../images/office.jpg\"\n\nfunction Hero(props) {\n  return (\n    <div className=\"hero text-center\" style={{ backgroundImage: `url(${backgroundImage})` }}>\n    {props.children}\n    </div>\n  );\n}\n\nexport default Hero;\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Container from \"../components/Container\";\nimport SearchForm from \"../components/SearchForm\";\nimport SearchResults from \"../components/SearchResults\";\nimport Maintable from \"../components/EmployeeTable\"\nimport Row from \"../components/Row\"\nimport Hero from \"../components/Hero\"\n\nclass Search extends Component {\n  state = {\n    search: [],\n    employees: [],\n    searchedEmp: [],\n    results: [],\n    error: \"\",\n  };\n  \n\n  componentDidMount() {\n    API.getRandomEmployees()\n      .then(res => this.setState({ employees: res.data.results }))\n      .catch(err => console.log(err));\n  };\n\n\n  handleInputChange = event => {\n    let searchkey= event.target.value;\n    console.log(\"searchkey\", searchkey)\n    let uppercaseKey= searchkey.charAt(0).toUpperCase() + searchkey.slice(1);\n    console.log(\"uppercase\", uppercaseKey)\n    this.setState({ search: uppercaseKey});\n    \n    const filteredChoice = this.state.employees.filter((filter)=>{\n      let chosen = filter.name.first + filter.name.last + filter.gender\n      console.log(event.target.value)\n      return chosen.indexOf(uppercaseKey) !== -1;\n    })\n    this.setState({searchedEmp: filteredChoice})\n  };\n\n\n  render() {\n\n    let table;\n    const searched = this.state.search;\n    let alterstate\n    if(searched===undefined || searched.length===0){alterstate= false}\n    else{alterstate=true}\n    {console.log(searched)}\n    {console.log(alterstate)}\n    if (alterstate===false){table=<Maintable employees= {this.state.employees} />} \n    else {table=<SearchResults results={this.state.searchedEmp}/>}\n    return (\n      <div>\n        <Container style={{ minHeight: \"80%\" }}>\n          <Hero >\n          </Hero>\n          <Row>\n            <div className=\"col-10\">\n              <SearchForm\n                handleInputChange={this.handleInputChange}\n                employees={this.state.employees}\n              />\n            </div>\n          </Row>\n          <Row className=\"justify-content-md-center\">\n            {table}\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React from \"react\";\nimport \"./style.css\";\n\n//This will build the Header for the page \nfunction Header(){\n  return (\n    <div className=\"header\">\n    <h1>Employee Directory</h1>\n    <p>Use the search box to narrow your results.</p>\n  </div>\n  )\n}\n\nexport default Header","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer fixed-bottom\">\n      <p>© 2020 Copyright:</p>\n      <a className=\"copyrightLink\" href=\"https://www.linkedin.com/in/wyatt-a-hancock-885705166/\"> Wyatt A. Hancock</a>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\">{props.children}</main>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Search from \"./pages/Search\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Wrapper from \"./components/Wrapper\";\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Header />\n        <Wrapper>\n          <Route exact path=\"/\" component={Search} />\n          <Route exact path=\"/search\" component={Search}/>\n        </Wrapper>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}